name: 'Task Planning GitHub Action'
description: 'Automatically generate GitHub Issues from PRD files using Taskmaster CLI'
author: 'ChatGPT (with Caleb)'
branding:
  icon: 'list'
  color: 'blue'

inputs:
  complexity-threshold:
    description: 'Complexity score threshold for task breakdown (default: 40)'
    required: false
    default: '40'
  max-depth:
    description: 'Maximum depth for automatic task recursion (default: 3)'
    required: false
    default: '3'
  prd-path-glob:
    description: 'POSIX glob pattern for PRD file paths (default: docs/**.prd.md)'
    required: false
    default: 'docs/**.prd.md'
  breakdown-max-depth:
    description: 'Maximum additional depth for manual breakdown commands (default: 2)'
    required: false
    default: '2'
  taskmaster-args:
    description: 'Additional arguments to pass to Taskmaster CLI'
    required: false
    default: ''
  github-token:
    description: 'GitHub token for API access'
    required: true
    default: ${{ github.token }}
  dry-run:
    description: 'Run in dry-run mode (preview only, no issues created)'
    required: false
    default: 'false'

outputs:
  task-count:
    description: 'Number of tasks generated'
  issues-created:
    description: 'Number of GitHub issues created'
  artifact-url:
    description: 'URL of the uploaded task graph artifact'

runs:
  using: 'composite'
  steps:
    - name: 'Setup and validate configuration'
      shell: bash
      env:
        COMPLEXITY_THRESHOLD: ${{ inputs.complexity-threshold }}
        MAX_DEPTH: ${{ inputs.max-depth }}
        PRD_PATH_GLOB: ${{ inputs.prd-path-glob }}
        BREAKDOWN_MAX_DEPTH: ${{ inputs.breakdown-max-depth }}
        TASKMASTER_ARGS: ${{ inputs.taskmaster-args }}
        DRY_RUN: ${{ inputs.dry-run }}
      run: |
        echo "Setting up Taskmaster Action configuration..."
        
        # Load configuration from environment
        ${{ github.action_path }}/scripts/config-manager.sh load-env
        
        # Validate configuration
        ${{ github.action_path }}/scripts/config-manager.sh validate
        
        echo "Configuration validated successfully"
        
    - name: 'Download and setup Taskmaster CLI'
      shell: bash
      run: |
        echo "Setting up Taskmaster CLI..."
        ${{ github.action_path }}/scripts/setup-taskmaster.sh
        echo "Taskmaster CLI setup complete"
        
    - name: 'Process PRD files'
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        DRY_RUN: ${{ inputs.dry-run }}
      run: |
        echo "Processing PRD files..."
        
        # Get configuration values
        COMPLEXITY_THRESHOLD=$(${{ github.action_path }}/scripts/config-manager.sh get complexity_threshold)
        MAX_DEPTH=$(${{ github.action_path }}/scripts/config-manager.sh get max_depth)
        PRD_PATH_GLOB=$(${{ github.action_path }}/scripts/config-manager.sh get prd_path_glob)
        
        echo "Using configuration:"
        echo "  Complexity threshold: $COMPLEXITY_THRESHOLD"
        echo "  Max depth: $MAX_DEPTH"
        echo "  PRD path glob: $PRD_PATH_GLOB"
        echo "  Dry run: $DRY_RUN"
        
        # Find PRD files (for now, use the main PRD file)
        PRD_FILES=($(find . -name "*.prd.md" -path "./docs/*" 2>/dev/null || echo "docs/initial-release.prd.md"))
        
        if [[ ${#PRD_FILES[@]} -eq 0 ]]; then
          echo "No PRD files found matching pattern: $PRD_PATH_GLOB"
          exit 1
        fi
        
        echo "Found ${#PRD_FILES[@]} PRD files: ${PRD_FILES[*]}"
        
        # Process each PRD file
        for prd_file in "${PRD_FILES[@]}"; do
          if [[ -f "$prd_file" ]]; then
            echo "Processing PRD file: $prd_file"
            
            # Generate task graph
            output_file="task-graph-$(basename "$prd_file" .prd.md).json"
            
            if ${{ github.action_path }}/scripts/taskmaster-cli.sh parse-prd "$prd_file" "$output_file" "$COMPLEXITY_THRESHOLD" "$MAX_DEPTH"; then
              echo "Successfully generated task graph: $output_file"
              
              # Validate and process output
              ${{ github.action_path }}/scripts/output-processor.sh validate "$output_file" taskgraph
              
              if [[ "$DRY_RUN" == "true" ]]; then
                echo "DRY RUN: Would create GitHub Issues from: $output_file"
                echo "Task summary:"
                ${{ github.action_path }}/scripts/output-processor.sh summary "$output_file" "/tmp/summary.json"
                cat /tmp/summary.json
              else
                echo "Creating GitHub Issues from: $output_file"
                
                # Create issues
                if ${{ github.action_path }}/scripts/github-issues.sh process "$output_file"; then
                  echo "Successfully created GitHub Issues"
                  
                  # Setup hierarchy relationships
                  echo "Setting up issue hierarchy..."
                  ${{ github.action_path }}/scripts/hierarchy-manager.sh process "$output_file"
                  
                  echo "Issue creation and hierarchy setup completed"
                  
                  # Upload artifact
                  echo "Uploading task graph artifact..."
                  ${{ github.action_path }}/scripts/artifact-manager.sh upload "$output_file"
                else
                  echo "Error: Failed to create GitHub Issues"
                  exit 1
                fi
              fi
            else
              echo "Error: Failed to process PRD file: $prd_file"
              exit 1
            fi
          else
            echo "Warning: PRD file not found: $prd_file"
          fi
        done
        
        echo "PRD processing completed"